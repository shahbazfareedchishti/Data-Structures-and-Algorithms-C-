#include <iostream>
#include <conio.h>
using namespace std;

class Node {
public:
	int data;
	Node* next;
	Node* prev;
	Node(int val = 0, Node* ptr1 = NULL, Node* ptr2 = NULL) {
		data = val;
		next = ptr1;
		prev = ptr2;
	}
};

class Queue {
	Node* head;
public:
	Qtack() {
		head = NULL;
	}
	bool isEmpty() {
		return head == NULL;
	}
	void enQueue(int val) {
		Node* temp = new Node(val, NULL, NULL);
		if (isEmpty()) {
			head = temp;
		}
		else {
			temp->next = head;
			head = temp;
		}
	}
	void deQueue() {
		if (isEmpty()) {
			cout << "Queue is Empty" << endl;
		}
		else {
			Node* ptr = head;
			Node* ptr2 = NULL;
			while (ptr->next != NULL) {
				ptr2 = ptr;
				ptr = ptr->next;
			}
			ptr2->next = NULL;
			cout << "Dequeued value is: " << ptr->data << endl;
			delete ptr;
		}
	}
	void top() {
		if (isEmpty()) {
			cout << "Queue is Empty" << endl;
		}
		else {
			Node* ptr = head;
			Node* ptr2 = NULL;
			while (ptr != NULL) {
				ptr2 = ptr;
				ptr = ptr->next;
			}
			cout << "Top value of Queue is: " << ptr2->data << endl;
		}
	}
	void display() {
		if (isEmpty()) {
			cout << "Queue is Empty" << endl;
		}
		else {
			Node* ptr = head;
			while (ptr != NULL) {
				cout << ptr->data << endl;
				ptr = ptr->next;
			}
		}
	}
};

int main() {
	Queue q1;
	cout << "Original Queue" << endl;
	q1.enQueue(3);
	q1.enQueue(6);
	q1.enQueue(8);
	q1.enQueue(2);
	q1.display();
	q1.deQueue();
	q1.display();
	q1.top();
	_getch();
	return 0;
}
